kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
  - role: control-plane
    kubeadmConfigPatches:
      - |
        apiVersion: kubeadm.k8s.io/v1beta3
        kind: ClusterConfiguration
        caCertPath: "/etc/kubernetes/pki/ca.pem"
        apiServer:
          extraArgs:
           authorization-mode: "Node,RBAC"
      - |
        apiVersion: kubelet.config.k8s.io/v1beta1
        kind: KubeletConfiguration
        serverTLSBootstrap: true
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
    extraPortMappings:
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      - containerPort: 443
        hostPort: 443
        protocol: TCP
    extraMounts:
        - hostPath: __HOME__/.kindpro/.ssl/ca.crt
          containerPath: /etc/kubernetes/pki/ca.crt
          readOnly: true
        - hostPath: __HOME__/.kindpro/.ssl/ca.key
          containerPath: /etc/kubernetes/pki/ca.key
          readOnly: true
  - role: worker
    extraMounts:
      - hostPath: __HOME__/.kindpro/data
        containerPath: /var/local-path-provisioner
      - hostPath: __HOME__/.kindpro/.ssl/ca.crt
        containerPath: /etc/kubernetes/pki/ca.crt
        readOnly: true
      - hostPath: __HOME__/.kindpro/.ssl/ca.key
        containerPath: /etc/kubernetes/pki/ca.key
        readOnly: true
  - role: worker
    extraMounts:
      - hostPath: __HOME__/.kindpro/data
        containerPath: /var/local-path-provisioner
      - hostPath: __HOME__/.kindpro/.ssl/ca.crt
        containerPath: /etc/kubernetes/pki/ca.crt
        readOnly: true
      - hostPath: __HOME__/.kindpro/.ssl/ca.key
        containerPath: /etc/kubernetes/pki/ca.key
        readOnly: true
